apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpserver
spec:
  replicas: 3
  selector:
    matchLabels:
      app: httpserver
  template:
    metadata:
      labels:
        app: httpserver
    spec:
      terminationGracePeriodSeconds: 60
      containers:
        - name: httpserver
          image: eilianhuang/cncamp:http_server_v1.0
          # 资源需求，QoS Class: Burstable
          resources:
            limits:
              cpu: 200m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 50Mi
          startupProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            failureThreshold: 10
            successThreshold: 1
            periodSeconds: 5
            timeoutSeconds: 1
          # 就绪探针
          readinessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 2
          # 存活探针
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 1
          env:
            - name: VERSION
              value: 1.0.1
          # 日志
          args:
            - -v=2
            - --logtostderr
          # 优雅终止
          lifecycle:
            preStop:
              exec:
                command: [ "killall httpserver" ]
          # 配置和代码分离
          envFrom:
            - configMapRef:
                name: httpserver-configmap
            - secretRef:
                name: httpserver-secret
      # 配置亲和性 保证多个pod不调度到同一个节点
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - httpserver
              topologyKey: "kubernetes.io/hostname"
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
    type: RollingUpdate
---
# NodePort Service
apiVersion: v1
kind: Service
metadata:
  name: cloudnative-httpserver
spec:
  type: NodePort
  externalTrafficPolicy: Cluster
  ports:
    - nodePort: 800
      targetPort: 80
      port: 80
      protocol: TCP
  selector:
    app: httpserver
---
# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: httpserver-configmap
data:
  VERSION_CONFIGMAP: "1.0.1-configmap"
---
# Secret
apiVersion: v1
kind: Secret
metadata:
  name: httpserver-secret
type: Opaque
data:
  # echo -n '1.0.1' | base64
  VERSION_SECRET: MS4wLjE=
---
#Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: httpserver-ingress
spec:
  tls:
    - hosts:
        -  cncamp.httpserver.com
      secretName: httpserver-ingress-tls
  rules:
    - host: "cncamp.httpserver.com"
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: httpserver
                port:
                  number: 80